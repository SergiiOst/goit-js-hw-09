{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-form.js"],"sourcesContent":["// Виконуй це завдання у файлах 2-form.html і 2-form.js. Розбий його на декілька підзавдань:\n\n// Оголоси поза будь-якими функціями об’єкт formData з полями email та message,            -------------\n// які спочатку мають порожні рядки як значення: { email: \"\", message: \"\" }.               -------------\n\n// Використовуй метод делегування для відстеження змін у формі через подію input.\n// Зберігай актуальні дані з полів email та message у formData та записуй цей об’єкт у локальне сховище.\n// Використовуй ключ \"feedback-form-state\" для зберігання даних у сховищі.\n\n// При завантаженні сторінки перевір, чи є дані у локальному сховищі.\n// Якщо так, використовуй їх для заповнення форми та об'єкта formData. Якщо ні, залиш поля форми порожніми.\n\n// Перед відправленням форми переконайся, що обидва поля форми заповнені.\n// Якщо будь-яке з полів (властивостей об’єкта formData) порожнє, показуй сповіщення з текстом «Fill please all fields».\n// Якщо всі поля заповнені, виведи у консоль об’єкт formData з актуальними значеннями, очисти локальне сховище, об’єкт formData і поля форми.\n\n//===============================================================================================================================================//\n\nconst formData = {\n  email: '',\n  message: '',\n};\n\nconst form = document.querySelector('.feedback-form');\n\nform.addEventListener('input', handleInput);\nform.addEventListener('submit', handleSubmit);\n\nconst savedFormData = localStorage.getItem('feedback-form-state');\nif (savedFormData) {\n  const { email, message } = JSON.parse(savedFormData);\n  formData.email = email || '';\n  formData.message = message || '';\n  populateText();\n}\n\nfunction handleInput(event) {\n  const key = event.target.name;\n  formData[key] = event.target.value.trim();\n  localStorage.setItem('feedback-form-state', JSON.stringify(formData));\n}\n\nfunction populateText() {\n  const { email, message } = formData;\n  form.elements.email.value = email;\n  form.elements.message.value = message;\n}\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  if (!validateForm()) {\n    alert('Fill please all fields');\n    return;\n  }\n  console.log(formData);\n  localStorage.removeItem('feedback-form-state');\n  form.reset();\n}\n\nfunction validateForm() {\n  return formData.email && formData.message;\n}\n"],"names":["formData","form","handleInput","handleSubmit","savedFormData","email","message","populateText","event","key","validateForm"],"mappings":"wFAkBA,MAAMA,EAAW,CACf,MAAO,GACP,QAAS,EACX,EAEMC,EAAO,SAAS,cAAc,gBAAgB,EAEpDA,EAAK,iBAAiB,QAASC,CAAW,EAC1CD,EAAK,iBAAiB,SAAUE,CAAY,EAE5C,MAAMC,EAAgB,aAAa,QAAQ,qBAAqB,EAChE,GAAIA,EAAe,CACjB,KAAM,CAAE,MAAAC,EAAO,QAAAC,CAAO,EAAK,KAAK,MAAMF,CAAa,EACnDJ,EAAS,MAAQK,GAAS,GAC1BL,EAAS,QAAUM,GAAW,GAC9BC,GACF,CAEA,SAASL,EAAYM,EAAO,CAC1B,MAAMC,EAAMD,EAAM,OAAO,KACzBR,EAASS,CAAG,EAAID,EAAM,OAAO,MAAM,OACnC,aAAa,QAAQ,sBAAuB,KAAK,UAAUR,CAAQ,CAAC,CACtE,CAEA,SAASO,GAAe,CACtB,KAAM,CAAE,MAAAF,EAAO,QAAAC,CAAS,EAAGN,EAC3BC,EAAK,SAAS,MAAM,MAAQI,EAC5BJ,EAAK,SAAS,QAAQ,MAAQK,CAChC,CAEA,SAASH,EAAaK,EAAO,CAE3B,GADAA,EAAM,eAAc,EAChB,CAACE,EAAY,EAAI,CACnB,MAAM,wBAAwB,EAC9B,MACD,CACD,QAAQ,IAAIV,CAAQ,EACpB,aAAa,WAAW,qBAAqB,EAC7CC,EAAK,MAAK,CACZ,CAEA,SAASS,GAAe,CACtB,OAAOV,EAAS,OAASA,EAAS,OACpC"}