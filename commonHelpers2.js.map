{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-form.js"],"sourcesContent":["// Виконуй це завдання у файлах 2-form.html і 2-form.js. Розбий його на декілька підзавдань:\n\n// Оголоси поза будь-якими функціями об’єкт formData з полями email та message,            -------------\n// які спочатку мають порожні рядки як значення: { email: \"\", message: \"\" }.               -------------\n\n// Використовуй метод делегування для відстеження змін у формі через подію input.\n// Зберігай актуальні дані з полів email та message у formData та записуй цей об’єкт у локальне сховище.\n// Використовуй ключ \"feedback-form-state\" для зберігання даних у сховищі.\n\n// При завантаженні сторінки перевір, чи є дані у локальному сховищі.\n// Якщо так, використовуй їх для заповнення форми та об'єкта formData. Якщо ні, залиш поля форми порожніми.\n\n// Перед відправленням форми переконайся, що обидва поля форми заповнені.\n// Якщо будь-яке з полів (властивостей об’єкта formData) порожнє, показуй сповіщення з текстом «Fill please all fields».\n// Якщо всі поля заповнені, виведи у консоль об’єкт formData з актуальними значеннями, очисти локальне сховище, об’єкт formData і поля форми.\n\n//===============================================================================================================================================//\n\nconst form = document.querySelector('.feedback-form');\n\nform.addEventListener('input', handleInput);\nform.addEventListener('submit', handleSubmit);\n\npopulateText();\n\nconst formData = {\n  email: '',\n  message: '',\n};\n\nfunction handleInput(event) {\n  const key = event.target.name;\n\n  formData[key] = event.target.value;\n\n  localStorage.setItem('feedback-form-state', JSON.stringify(formData));\n}\n\nfunction populateText() {\n  const data = JSON.parse(localStorage.getItem('feedback-form-state'));\n  if (!data) {\n    return;\n  }\n  const { email, message } = form.elements;\n\n  email.value = data.email;\n  message.value = data.message;\n}\n\nfunction validateForm() {\n  const trimmedEmail = formData.email.trim();\n  const trimmedMessage = formData.message.trim();\n  return trimmedEmail !== '' && trimmedMessage !== '';\n}\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  if (!validateForm()) {\n    alert('Fill please all fields');\n    return;\n  }\n  localStorage.removeItem('feedback-form-state');\n  form.reset();\n}\n"],"names":["form","handleInput","handleSubmit","populateText","formData","event","key","data","email","message","validateForm","trimmedEmail","trimmedMessage"],"mappings":"wFAkBA,MAAMA,EAAO,SAAS,cAAc,gBAAgB,EAEpDA,EAAK,iBAAiB,QAASC,CAAW,EAC1CD,EAAK,iBAAiB,SAAUE,CAAY,EAE5CC,IAEA,MAAMC,EAAW,CACf,MAAO,GACP,QAAS,EACX,EAEA,SAASH,EAAYI,EAAO,CAC1B,MAAMC,EAAMD,EAAM,OAAO,KAEzBD,EAASE,CAAG,EAAID,EAAM,OAAO,MAE7B,aAAa,QAAQ,sBAAuB,KAAK,UAAUD,CAAQ,CAAC,CACtE,CAEA,SAASD,GAAe,CACtB,MAAMI,EAAO,KAAK,MAAM,aAAa,QAAQ,qBAAqB,CAAC,EACnE,GAAI,CAACA,EACH,OAEF,KAAM,CAAE,MAAAC,EAAO,QAAAC,GAAYT,EAAK,SAEhCQ,EAAM,MAAQD,EAAK,MACnBE,EAAQ,MAAQF,EAAK,OACvB,CAEA,SAASG,GAAe,CACtB,MAAMC,EAAeP,EAAS,MAAM,KAAI,EAClCQ,EAAiBR,EAAS,QAAQ,KAAI,EAC5C,OAAOO,IAAiB,IAAMC,IAAmB,EACnD,CAEA,SAASV,EAAaG,EAAO,CAE3B,GADAA,EAAM,eAAc,EAChB,CAACK,EAAY,EAAI,CACnB,MAAM,wBAAwB,EAC9B,MACD,CACD,aAAa,WAAW,qBAAqB,EAC7CV,EAAK,MAAK,CACZ"}